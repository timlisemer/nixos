{
  "terminal.integrated.profiles.linux": {
    "bash (interactive)": {
      "path": "/bin/bash",
      "args": ["--login", "-i"]
    }
  },
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  "terminal.external.linuxExec": "ghostty",
  "update.mode": "manual",
  "workbench.colorTheme": "Adwaita Dark & Github syntax highlighting",
  "extensions.autoUpdate": true,
  "extensions.autoCheckUpdates": true,
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.openRepositoryInParentFolders": "always",
  "github.copilot.nextEditSuggestions.enabled": true,

  // ESLint for JS/TS linting
  "eslint.enable": true,
  "eslint.run": "onSave",

  // File save behavior
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,

  // Global format on save
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,

  // Rust setup
  "rust-analyzer.cargo.allTargets": true,
  "rust-analyzer.checkOnSave": true,
  "rust-analyzer.check.command": "clippy",
  "rust-analyzer.check.extraArgs": [
    "--",
    "-A",
    "clippy::module_inception",
    "-A",
    "clippy::enum_variant_names"
  ],
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.lens.enable": true,

  // Typescript setup
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,

  // Svelte + TS plugin
  "svelte.enable-ts-plugin": true,

  // Formatter overrides per language
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[svelte]": {
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-containers"
  },
  "[nix]": {
    "editor.defaultFormatter": "kamadorueda.alejandra"
  },
  "[makefile]": {
    "editor.defaultFormatter": "ms-vscode.makefile-tools"
  },

  // Prettier config (optional overrides)
  "prettier.singleQuote": true,
  "prettier.trailingComma": "es5",
  "prettier.semi": true,

  // File nesting patterns -> This controls how files are grouped in the explorer. For example, you can group test files with their implementation files.
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb, bun.lock",
    "Cargo.toml": "Cargo.lock",
    "*.sqlite": "${capture}.${extname}-*",
    "*.db": "${capture}.${extname}-*",
    "*.sqlite3": "${capture}.${extname}-*",
    "*.db3": "${capture}.${extname}-*",
    "*.sdb": "${capture}.${extname}-*",
    "*.s3db": "${capture}.${extname}-*",
    "*.rs": "${capture}_test.rs"
  },
  "workbench.startupEditor": "none",
  "database-client.autoSync": true,
  "kilo-code.allowedCommands": [
    "git log",
    "git diff",
    "git show",
    "sqlite3",
    "make check",
    "cargo check",
    "grep",
    "cargo test",
    "aws s3 ls",
    "find",
    "alejandra"
  ],
  "window.commandCenter": true,
  "cursor.cpp.disabledLanguages": [
      "plaintext",
      "markdown",
      "scminput"
  ]
}
